{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-weu-dev-asx-130"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/3_Process_Transit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Create Final TranStatus",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Step1_createConsolidationTranStatus",
								"type": "DataFlowReference"
							},
							"staging": {
								"linkedService": {
									"referenceName": "sta130maz130rsqovup5cso-StorageLinkedService",
									"type": "LinkedServiceReference"
								},
								"folderPath": "mex/log"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "reverse_logistics/transit"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-14T23:23:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Step1_createConsolidationTranStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Step1_createConsolidationTranStatus')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "reverse_logistics/transit"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "synapsql_transtatus",
								"type": "DatasetReference"
							},
							"name": "SourceSynapseTranStatus"
						},
						{
							"dataset": {
								"referenceName": "synapsql_trans",
								"type": "DatasetReference"
							},
							"name": "SourceSynapseTrans"
						},
						{
							"dataset": {
								"referenceName": "synapsql_destination",
								"type": "DatasetReference"
							},
							"name": "SourceSynapseDestination"
						},
						{
							"dataset": {
								"referenceName": "synapsql_tarima",
								"type": "DatasetReference"
							},
							"name": "SourceSynapseTarima"
						},
						{
							"dataset": {
								"referenceName": "synapsql_transitme2n",
								"type": "DatasetReference"
							},
							"name": "SourceSyanpseTransITME2N"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "synapsql_transtatusfinal",
								"type": "DatasetReference"
							},
							"name": "DestinationSyanpseFinalTranStatus"
						}
					],
					"transformations": [
						{
							"name": "ReplaceCentro"
						},
						{
							"name": "SelectTransColumns"
						},
						{
							"name": "SelectDestinationColumns"
						},
						{
							"name": "SelectTarimaColumns"
						},
						{
							"name": "LeftJoinTranStatusAndDestination"
						},
						{
							"name": "SelectTransITME2NColumns"
						},
						{
							"name": "LeftJoinNewTranStatusAndTransITME2N"
						},
						{
							"name": "LeftJoinNewTransStatus2AndTrans"
						},
						{
							"name": "SelectNewTransStatusColums"
						}
					],
					"script": "source(output(\n\t\tClDocuCompras as string,\n\t\tDocuCompras as string,\n\t\tProveedor as string,\n\t\tPosicion as string,\n\t\tMaterial as string,\n\t\tTextoBreve as string,\n\t\tCantidadPedido as string,\n\t\tUnidadMedidaPedido as string,\n\t\tCentro as string,\n\t\tAlmacen as string,\n\t\tEntrega as string,\n\t\tStaTotMovMercancia as string,\n\t\tFechaEntrega as string,\n\t\tClaseMovimiento1 as string,\n\t\tDocuMaterial1 as string,\n\t\tCantidad1 as string,\n\t\tLote1 as string,\n\t\tFeContabilizacion1 as string,\n\t\tClaseMovimiento2 as string,\n\t\tDocuMaterial2 as string,\n\t\tCantidad2 as string,\n\t\tLote2 as string,\n\t\tFeContabilizacion2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT *\\nFROM ext.mex_log_reverlog_trans_status\\nWHERE TRIM(UPPER(StaTotMovMercancia)) LIKE \\'C\\'',\n\tformat: 'query',\n\tstaged: false) ~> SourceSynapseTranStatus\nsource(output(\n\t\tPtoExpedicPtoRecepcion as string,\n\t\tDenominacion1 as string,\n\t\tDestinatarioMercancia as string,\n\t\tNombre1 as string,\n\t\tNTransporte as string,\n\t\tAgenteServicios as string,\n\t\tNombre2 as string,\n\t\tEntrega as string,\n\t\tPosicion as string,\n\t\tTipoPosicion as string,\n\t\tDenominacion2 as string,\n\t\tMaterial as string,\n\t\tTextoBreveMaterial as string,\n\t\tCantidadEntrega as string,\n\t\tUnidadMedidaBase as string,\n\t\tFeMovMercanciaReal as string,\n\t\tDocumentoModelo as string,\n\t\tNPedido as string,\n\t\tCreado as string,\n\t\tIdentiExterna1 as string,\n\t\tIdentiExterna2 as string,\n\t\tIDTrackingTransp as string,\n\t\tClaseExpedicion as string,\n\t\tDenominacion3 as string,\n\t\tRutaPTransporte as string,\n\t\tDenominacion4 as string,\n\t\tFePlanifRegistro as string,\n\t\tStaTotMovMercancia as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT *\\nFROM ext.mex_log_reverlog_trans_trans\\nWHERE TRIM(UPPER(StaTotMovMercancia)) LIKE \\'C\\'',\n\tformat: 'query',\n\tstaged: false) ~> SourceSynapseTrans\nsource(output(\n\t\ti2 as string,\n\t\tNSociedadNueva as string,\n\t\tNSociedadAnterior as string,\n\t\tIDSAGNueva as string,\n\t\tIDSAGAnterior as string,\n\t\tDRVNva as string,\n\t\tDRV as string,\n\t\tDescripcionUEN as string,\n\t\tDescripcionUENCorto as string,\n\t\tEsquema as string,\n\t\tEstado as string,\n\t\tTipo as string,\n\t\tDistribucion as string,\n\t\tZona as string,\n\t\tAgencia as string,\n\t\tSubAgencia as string,\n\t\tTipoInv as string,\n\t\tOrigenJDA as string,\n\t\tDestinoJDA as string,\n\t\tDescripcionDestino as string,\n\t\t{TipoDistribuciÃ³n} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> SourceSynapseDestination\nsource(output(\n\t\tEtiquetasFila as string,\n\t\tSumaTarimas as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> SourceSynapseTarima\nsource(output(\n\t\tDocumentoCompras as string,\n\t\tNumNecesidad as string,\n\t\tNombreProveedor as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT * \\nFROM ext.mex_log_reverlog_trans_itme2n\\nWHERE DocumentoCompras IS NOT NULL OR DocumentoCompras <> \\'\\'',\n\tformat: 'query',\n\tstaged: false) ~> SourceSyanpseTransITME2N\nSourceSynapseTranStatus derive(Centro = replace(Centro, 'AL', 'FL')) ~> ReplaceCentro\nSourceSynapseTrans select(mapColumn(\n\t\tPtoExpedicPtoRecepcion,\n\t\tDenominacion1,\n\t\tDestinatarioMercancia,\n\t\tNombre1,\n\t\tNTransporte,\n\t\tAgenteServicios,\n\t\tNombre2,\n\t\tEntrega,\n\t\tPosicion,\n\t\tTipoPosicion,\n\t\tDenominacion2,\n\t\tMaterial,\n\t\tTextoBreveMaterial,\n\t\tCantidadEntrega,\n\t\tUnidadMedidaBase,\n\t\tFeMovMercanciaReal,\n\t\tDocumentoModelo,\n\t\tNPedido,\n\t\tCreado,\n\t\tIdentiExterna1,\n\t\tIdentiExterna2,\n\t\tIDTrackingTransp,\n\t\tClaseExpedicion,\n\t\tDenominacion3,\n\t\tRutaPTransporte,\n\t\tDenominacion4,\n\t\tFePlanifRegistro,\n\t\tStaTotMovMercancia\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTransColumns\nSourceSynapseDestination select(mapColumn(\n\t\tCentro_Des = IDSAGNueva,\n\t\tAgencia_Des = DescripcionUENCorto,\n\t\tOP_Des = Tipo\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDestinationColumns\nSourceSynapseTarima select(mapColumn(\n\t\tEtiquetasFila_Tarima = EtiquetasFila,\n\t\tSumaTarimas_Materia = SumaTarimas\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTarimaColumns\nReplaceCentro, SelectDestinationColumns join(trim(upper(Centro)) == trim(upper(Centro_Des)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftJoinTranStatusAndDestination\nSourceSyanpseTransITME2N select(mapColumn(\n\t\tDocumentoCompras_TransITME2N = DocumentoCompras,\n\t\tFolio_TransITME2N = NumNecesidad,\n\t\tNombreProveedor_TransITME2N = NombreProveedor\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTransITME2NColumns\nLeftJoinTranStatusAndDestination, SourceSyanpseTransITME2N join(trim(upper(DocuCompras)) == trim(upper(DocumentoCompras)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftJoinNewTranStatusAndTransITME2N\nLeftJoinNewTranStatusAndTransITME2N, SelectTransColumns join(trim(upper(DocuCompras)) == trim(upper(DocumentoModelo)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftJoinNewTransStatus2AndTrans\nLeftJoinNewTransStatus2AndTrans select(mapColumn(\n\t\tClDocuCompras,\n\t\tDocuCompras,\n\t\tProveedor,\n\t\tPosicion = SourceSynapseTranStatus@Posicion,\n\t\tMaterial = SourceSynapseTranStatus@Material,\n\t\tTextoBreve,\n\t\tCantidadPedido,\n\t\tUnidadMedidaPedido,\n\t\tCentro,\n\t\tAlmacen,\n\t\tEntrega = SourceSynapseTranStatus@Entrega,\n\t\tStaTotMovMercancia = SourceSynapseTranStatus@StaTotMovMercancia,\n\t\tFechaEntrega,\n\t\tClaseMovimiento1,\n\t\tDocuMaterial1,\n\t\tCantidad1,\n\t\tLote1,\n\t\tFeContabilizacion1,\n\t\tClaseMovimiento2,\n\t\tDocuMaterial2,\n\t\tCantidad2,\n\t\tLote2,\n\t\tFeContabilizacion2,\n\t\tCentro_Des,\n\t\tAgencia_Des,\n\t\tOP_Des,\n\t\tDocumentoCompras_TransITME2N = DocumentoCompras,\n\t\tFolio_TransITME2N = NumNecesidad,\n\t\tNombreProveedor__TransITME2N = NombreProveedor,\n\t\tStaTotMovMercancia_Trans = SelectTransColumns@StaTotMovMercancia\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectNewTransStatusColums\nSelectNewTransStatusColums sink(input(\n\t\tClDocuCompras as string,\n\t\tDocuCompras as string,\n\t\tProveedor as string,\n\t\tPosicion as string,\n\t\tMaterial as string,\n\t\tTextoBreve as string,\n\t\tCantidadPedido as string,\n\t\tUnidadMedidaPedido as string,\n\t\tCentro as string,\n\t\tAlmacen as string,\n\t\tEntrega as string,\n\t\tStaTotMovMercancia as string,\n\t\tFechaEntrega as string,\n\t\tClaseMovimiento1 as string,\n\t\tDocuMaterial1 as string,\n\t\tCantidad1 as string,\n\t\tLote1 as string,\n\t\tFeContabilizacion1 as string,\n\t\tClaseMovimiento2 as string,\n\t\tDocuMaterial2 as string,\n\t\tCantidad2 as string,\n\t\tLote2 as string,\n\t\tFeContabilizacion2 as string,\n\t\tAgencia_Des as string,\n\t\tOP_Des as string,\n\t\tDocumentoCompras_TransITME2N as string,\n\t\tFolio_TransITME2N as string,\n\t\tNombreProveedor__TransITME2N as string,\n\t\tStaTotMovMercancia_Trans as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tmapColumn(\n\t\tClDocuCompras,\n\t\tDocuCompras,\n\t\tProveedor,\n\t\tPosicion,\n\t\tMaterial,\n\t\tTextoBreve,\n\t\tCantidadPedido,\n\t\tUnidadMedidaPedido,\n\t\tCentro,\n\t\tAlmacen,\n\t\tEntrega,\n\t\tStaTotMovMercancia,\n\t\tFechaEntrega,\n\t\tClaseMovimiento1,\n\t\tDocuMaterial1,\n\t\tCantidad1,\n\t\tLote1,\n\t\tFeContabilizacion1,\n\t\tClaseMovimiento2,\n\t\tDocuMaterial2,\n\t\tCantidad2,\n\t\tLote2,\n\t\tFeContabilizacion2,\n\t\tCentro_Des,\n\t\tAgencia_Des,\n\t\tOP_Des,\n\t\tDocumentoCompras_TransITME2N,\n\t\tFolio_TransITME2N,\n\t\tNombreProveedor__TransITME2N,\n\t\tStaTotMovMercancia_Trans\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DestinationSyanpseFinalTranStatus"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "reverse_logistics/transit"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "synapsql_transtatusfinal",
								"type": "DatasetReference"
							},
							"name": "SourceSynapseFinalTranStatus"
						},
						{
							"dataset": {
								"referenceName": "synapsql_material",
								"type": "DatasetReference"
							},
							"name": "SourceSynapseMaterial"
						},
						{
							"dataset": {
								"referenceName": "synapsql_tarima",
								"type": "DatasetReference"
							},
							"name": "SourceSyanpseTarima"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "synapsql_trans_mastertable",
								"type": "DatasetReference"
							},
							"name": "DestinationSynapseMaster"
						}
					],
					"transformations": [
						{
							"name": "SelectColumnsMaterial"
						},
						{
							"name": "LeftJoinTranStatusAndMaterial"
						},
						{
							"name": "CreateCantidadRealAndFechaCarga"
						},
						{
							"name": "LeftJoinTranStatus2AndTarimas"
						},
						{
							"name": "SelecColumnsTarimas"
						},
						{
							"name": "CreateSumaTarimasAndTarimasLibresAndHora"
						},
						{
							"name": "SortByDocumentoCompras"
						}
					],
					"script": "source(output(\n\t\tClDocuCompras as string,\n\t\tDocuCompras as string,\n\t\tProveedor as string,\n\t\tPosicion as string,\n\t\tMaterial as string,\n\t\tTextoBreve as string,\n\t\tCantidadPedido as string,\n\t\tUnidadMedidaPedido as string,\n\t\tCentro as string,\n\t\tAlmacen as string,\n\t\tEntrega as string,\n\t\tStaTotMovMercancia as string,\n\t\tFechaEntrega as string,\n\t\tClaseMovimiento1 as string,\n\t\tDocuMaterial1 as string,\n\t\tCantidad1 as string,\n\t\tLote1 as string,\n\t\tFeContabilizacion1 as string,\n\t\tClaseMovimiento2 as string,\n\t\tDocuMaterial2 as string,\n\t\tCantidad2 as string,\n\t\tLote2 as string,\n\t\tFeContabilizacion2 as string,\n\t\tAgencia_Des as string,\n\t\tOP_Des as string,\n\t\tDocumentoCompras_TransITME2N as string,\n\t\tFolio_TransITME2N as string,\n\t\tNombreProveedor__TransITME2N as string,\n\t\tStaTotMovMercancia_Trans as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> SourceSynapseFinalTranStatus\nsource(output(\n\t\tMaterial as string,\n\t\tI2 as string,\n\t\tTextoBreveDeMaterial as string,\n\t\tMarca as string,\n\t\tCupo as string,\n\t\tColor as string,\n\t\tTipoDeEnvase as string,\n\t\tCupoAgrupado as string,\n\t\tFactor as string,\n\t\tCajaPorTarima as string,\n\t\tDestino as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> SourceSynapseMaterial\nsource(output(\n\t\tEtiquetasFila as string,\n\t\tSumaTarimas as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> SourceSyanpseTarima\nSourceSynapseMaterial select(mapColumn(\n\t\tMaterial_Material = Material,\n\t\tTipoDeEnvase_Material = TipoDeEnvase,\n\t\tProduccion_Material = Destino\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumnsMaterial\nSourceSynapseFinalTranStatus, SelectColumnsMaterial join(trim(upper(Material)) == trim(upper(Material_Material)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftJoinTranStatusAndMaterial\nLeftJoinTranStatusAndMaterial derive(CantidadReal = iif(trim(upper(UnidadMedidaPedido))=='MIL', ((toInteger(CantidadPedido)*1000)/24), toInteger(CantidadPedido)),\n\t\tFechaCarga = currentDate()) ~> CreateCantidadRealAndFechaCarga\nSortByDocumentoCompras, SelecColumnsTarimas join(trim(upper(DocuCompras)) == trim(upper(EtiquetasFila_Tarima)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftJoinTranStatus2AndTarimas\nSourceSyanpseTarima select(mapColumn(\n\t\tEtiquetasFila_Tarima = EtiquetasFila,\n\t\tSumaTarimas_Tarima = SumaTarimas\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecColumnsTarimas\nLeftJoinTranStatus2AndTarimas derive(SumaTarimas = 0,\n\t\tTarimasLibres = 0) ~> CreateSumaTarimasAndTarimasLibresAndHora\nCreateCantidadRealAndFechaCarga sort(asc(DocuCompras, false)) ~> SortByDocumentoCompras\nCreateSumaTarimasAndTarimasLibresAndHora sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DestinationSynapseMaster"
				}
			},
			"dependsOn": []
		}
	]
}