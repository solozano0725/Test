{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-weu-dev-asx-130"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/synapsql_destination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aswweudevasx130_AzureSynapse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "reverse_logistics/transit/catalog/synapse"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "i2",
						"type": "nvarchar"
					},
					{
						"name": "NSociedadNueva",
						"type": "nvarchar"
					},
					{
						"name": "NSociedadAnterior",
						"type": "nvarchar"
					},
					{
						"name": "IDSAGNueva",
						"type": "nvarchar"
					},
					{
						"name": "IDSAGAnterior",
						"type": "nvarchar"
					},
					{
						"name": "DRVNva",
						"type": "nvarchar"
					},
					{
						"name": "DRV",
						"type": "nvarchar"
					},
					{
						"name": "DescripcionUEN",
						"type": "nvarchar"
					},
					{
						"name": "DescripcionUENCorto",
						"type": "nvarchar"
					},
					{
						"name": "Esquema",
						"type": "nvarchar"
					},
					{
						"name": "Estado",
						"type": "nvarchar"
					},
					{
						"name": "Tipo",
						"type": "nvarchar"
					},
					{
						"name": "Distribucion",
						"type": "nvarchar"
					},
					{
						"name": "Zona",
						"type": "nvarchar"
					},
					{
						"name": "Agencia",
						"type": "nvarchar"
					},
					{
						"name": "SubAgencia",
						"type": "nvarchar"
					},
					{
						"name": "TipoInv",
						"type": "nvarchar"
					},
					{
						"name": "OrigenJDA",
						"type": "nvarchar"
					},
					{
						"name": "DestinoJDA",
						"type": "nvarchar"
					},
					{
						"name": "DescripcionDestino",
						"type": "nvarchar"
					},
					{
						"name": "TipoDistribuci√≥n",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "ext",
					"table": "mex_log_reverlog_trans_destination"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/synapsql_material')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aswweudevasx130_AzureSynapse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "reverse_logistics/transit/catalog/synapse"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Material",
						"type": "nvarchar"
					},
					{
						"name": "I2",
						"type": "nvarchar"
					},
					{
						"name": "TextoBreveDeMaterial",
						"type": "nvarchar"
					},
					{
						"name": "Marca",
						"type": "nvarchar"
					},
					{
						"name": "Cupo",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "TipoDeEnvase",
						"type": "nvarchar"
					},
					{
						"name": "CupoAgrupado",
						"type": "nvarchar"
					},
					{
						"name": "Factor",
						"type": "nvarchar"
					},
					{
						"name": "CajaPorTarima",
						"type": "nvarchar"
					},
					{
						"name": "Destino",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "ext",
					"table": "mex_log_reverlog_trans_material"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/synapsql_tarima')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aswweudevasx130_AzureSynapse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "reverse_logistics/transit/catalog/synapse"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "EtiquetasFila",
						"type": "nvarchar"
					},
					{
						"name": "SumaTarimas",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "ext",
					"table": "mex_log_reverlog_trans_tarima"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/synapsql_trans')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aswweudevasx130_AzureSynapse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "reverse_logistics/transit/input/synapse"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "PtoExpedicPtoRecepcion",
						"type": "nvarchar"
					},
					{
						"name": "Denominacion1",
						"type": "nvarchar"
					},
					{
						"name": "DestinatarioMercancia",
						"type": "nvarchar"
					},
					{
						"name": "Nombre1",
						"type": "nvarchar"
					},
					{
						"name": "NTransporte",
						"type": "nvarchar"
					},
					{
						"name": "AgenteServicios",
						"type": "nvarchar"
					},
					{
						"name": "Nombre2",
						"type": "nvarchar"
					},
					{
						"name": "Entrega",
						"type": "nvarchar"
					},
					{
						"name": "Posicion",
						"type": "nvarchar"
					},
					{
						"name": "TipoPosicion",
						"type": "nvarchar"
					},
					{
						"name": "Denominacion2",
						"type": "nvarchar"
					},
					{
						"name": "Material",
						"type": "nvarchar"
					},
					{
						"name": "TextoBreveMaterial",
						"type": "nvarchar"
					},
					{
						"name": "CantidadEntrega",
						"type": "nvarchar"
					},
					{
						"name": "UnidadMedidaBase",
						"type": "nvarchar"
					},
					{
						"name": "FeMovMercanciaReal",
						"type": "nvarchar"
					},
					{
						"name": "DocumentoModelo",
						"type": "nvarchar"
					},
					{
						"name": "NPedido",
						"type": "nvarchar"
					},
					{
						"name": "Creado",
						"type": "nvarchar"
					},
					{
						"name": "IdentiExterna1",
						"type": "nvarchar"
					},
					{
						"name": "IdentiExterna2",
						"type": "nvarchar"
					},
					{
						"name": "IDTrackingTransp",
						"type": "nvarchar"
					},
					{
						"name": "ClaseExpedicion",
						"type": "nvarchar"
					},
					{
						"name": "Denominacion3",
						"type": "nvarchar"
					},
					{
						"name": "RutaPTransporte",
						"type": "nvarchar"
					},
					{
						"name": "Denominacion4",
						"type": "nvarchar"
					},
					{
						"name": "FePlanifRegistro",
						"type": "nvarchar"
					},
					{
						"name": "StaTotMovMercancia",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "ext",
					"table": "mex_log_reverlog_trans_trans"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/synapsql_transitme2n')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aswweudevasx130_AzureSynapse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "reverse_logistics/transit/input/synapse"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "DocumentoCompras",
						"type": "nvarchar"
					},
					{
						"name": "NumNecesidad",
						"type": "nvarchar"
					},
					{
						"name": "NombreProveedor",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "ext",
					"table": "mex_log_reverlog_trans_itme2n"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/synapsql_transtatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aswweudevasx130_AzureSynapse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "reverse_logistics/transit/input/synapse"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ClDocuCompras",
						"type": "nvarchar"
					},
					{
						"name": "DocuCompras",
						"type": "nvarchar"
					},
					{
						"name": "Proveedor",
						"type": "nvarchar"
					},
					{
						"name": "Posicion",
						"type": "nvarchar"
					},
					{
						"name": "Material",
						"type": "nvarchar"
					},
					{
						"name": "TextoBreve",
						"type": "nvarchar"
					},
					{
						"name": "CantidadPedido",
						"type": "nvarchar"
					},
					{
						"name": "UnidadMedidaPedido",
						"type": "nvarchar"
					},
					{
						"name": "Centro",
						"type": "nvarchar"
					},
					{
						"name": "Almacen",
						"type": "nvarchar"
					},
					{
						"name": "Entrega",
						"type": "nvarchar"
					},
					{
						"name": "StaTotMovMercancia",
						"type": "nvarchar"
					},
					{
						"name": "FechaEntrega",
						"type": "nvarchar"
					},
					{
						"name": "ClaseMovimiento1",
						"type": "nvarchar"
					},
					{
						"name": "DocuMaterial1",
						"type": "nvarchar"
					},
					{
						"name": "Cantidad1",
						"type": "nvarchar"
					},
					{
						"name": "Lote1",
						"type": "nvarchar"
					},
					{
						"name": "FeContabilizacion1",
						"type": "nvarchar"
					},
					{
						"name": "ClaseMovimiento2",
						"type": "nvarchar"
					},
					{
						"name": "DocuMaterial2",
						"type": "nvarchar"
					},
					{
						"name": "Cantidad2",
						"type": "nvarchar"
					},
					{
						"name": "Lote2",
						"type": "nvarchar"
					},
					{
						"name": "FeContabilizacion2",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "ext",
					"table": "mex_log_reverlog_trans_status"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/xlsxLocationToSynapseDestination')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "reverse_logistics/transit/data_cleaning/catalog"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "xlsx_location",
								"type": "DatasetReference"
							},
							"name": "SourceXLSXLocation"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "synapsql_destination",
								"type": "DatasetReference"
							},
							"name": "DestinationSynapseDestination"
						}
					],
					"transformations": [
						{
							"name": "SelectColumns"
						},
						{
							"name": "TrimColumns"
						}
					],
					"script": "source(output(\n\t\ti2 as string,\n\t\t{# Sociedad Nueva} as string,\n\t\t{# Sociedad Anterior} as string,\n\t\t{ID SAG Nueva} as string,\n\t\t{ID SAG Anterior} as string,\n\t\tDRV_Nva as string,\n\t\tDRV as string,\n\t\t{Descripci√≥n UEN} as string,\n\t\t{Descripcion UEN Corto} as string,\n\t\t{Descripci√≥n SAG} as string,\n\t\tEsquema as string,\n\t\tEstado as string,\n\t\tTipo as string,\n\t\t{Distribuci√≥n} as string,\n\t\t{Puerto Expedici√≥n} as string,\n\t\tZona as string,\n\t\tAgencia as string,\n\t\t{Sub Agencia} as string,\n\t\tTipo_Inv as string,\n\t\tOrigenJDA as string,\n\t\tDestinoJDA as string,\n\t\t{Descripci√≥n Destino} as string,\n\t\t{Tipo Distribuci√≥n} as string,\n\t\tOp as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SourceXLSXLocation\nTrimColumns select(mapColumn(\n\t\tI2 = i2,\n\t\tNSociedadNueva = {# Sociedad Nueva},\n\t\tNSociedadAnterior = {# Sociedad Anterior},\n\t\tIDSAGNueva = {ID SAG Nueva},\n\t\tIDSAGAnterior = {ID SAG Anterior},\n\t\tDRVNva = DRV_Nva,\n\t\tDRV,\n\t\tDescripcionUEN = {Descripci√≥n UEN},\n\t\tDescripcionUENCorto = {Descripcion UEN Corto},\n\t\tDescripcionSAG = {Descripcion UEN Corto},\n\t\tEsquema,\n\t\tEstado,\n\t\tTipo,\n\t\tDistribucion = {Distribuci√≥n},\n\t\tPuertoExpedicion = {Distribuci√≥n},\n\t\tZona,\n\t\tAgencia,\n\t\tSubAgencia = {Sub Agencia},\n\t\tTipoInv = Tipo_Inv,\n\t\tOrigenJDA,\n\t\tDestinoJDA,\n\t\tDescripcionDestino = {Descripci√≥n Destino},\n\t\t{TipoDistribuci√≥n} = {Tipo Distribuci√≥n}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nSourceXLSXLocation derive(i2 = trim(i2),\n\t\t{# Sociedad Nueva} = trim({# Sociedad Nueva}),\n\t\t{# Sociedad Anterior} = trim({# Sociedad Anterior}),\n\t\t{ID SAG Nueva} = trim({ID SAG Nueva}),\n\t\t{ID SAG Anterior} = trim({ID SAG Anterior}),\n\t\tDRV_Nva = trim(DRV_Nva),\n\t\tDRV = trim(DRV),\n\t\t{Descripci√≥n UEN} = trim({Descripci√≥n UEN}),\n\t\t{Descripcion UEN Corto} = trim({Descripcion UEN Corto}),\n\t\t{Descripci√≥n SAG} = trim({Descripci√≥n SAG}),\n\t\tEsquema = trim(Esquema),\n\t\tEstado = trim(Estado),\n\t\tTipo = trim(Tipo),\n\t\t{Distribuci√≥n} = trim({Distribuci√≥n}),\n\t\t{Puerto Expedici√≥n} = trim({Puerto Expedici√≥n}),\n\t\tZona = trim(Zona),\n\t\tAgencia = trim(Agencia),\n\t\t{Sub Agencia} = trim({Sub Agencia}),\n\t\tTipo_Inv = trim(Tipo_Inv),\n\t\tOrigenJDA = trim(OrigenJDA),\n\t\tDestinoJDA = trim(DestinoJDA),\n\t\t{Tipo Distribuci√≥n} = trim({Tipo Distribuci√≥n}),\n\t\tOp = trim(Op)) ~> TrimColumns\nSelectColumns sink(input(\n\t\ti2 as string,\n\t\tNSociedadNueva as string,\n\t\tNSociedadAnterior as string,\n\t\tIDSAGNueva as string,\n\t\tIDSAGAnterior as string,\n\t\tDRVNva as string,\n\t\tDRV as string,\n\t\tDescripcionUEN as string,\n\t\tDescripcionUENCorto as string,\n\t\tEsquema as string,\n\t\tEstado as string,\n\t\tTipo as string,\n\t\tDistribucion as string,\n\t\tZona as string,\n\t\tAgencia as string,\n\t\tSubAgencia as string,\n\t\tTipoInv as string,\n\t\tOrigenJDA as string,\n\t\tDestinoJDA as string,\n\t\tDescripcionDestino as string,\n\t\t{TipoDistribuci√≥n} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tmapColumn(\n\t\ti2 = I2,\n\t\tNSociedadNueva,\n\t\tNSociedadAnterior,\n\t\tIDSAGNueva,\n\t\tIDSAGAnterior,\n\t\tDRVNva,\n\t\tDRV,\n\t\tDescripcionUEN,\n\t\tDescripcionUENCorto,\n\t\tEsquema,\n\t\tEstado,\n\t\tTipo,\n\t\tDistribucion,\n\t\tZona,\n\t\tAgencia,\n\t\tSubAgencia,\n\t\tTipoInv,\n\t\tOrigenJDA,\n\t\tDestinoJDA,\n\t\tDescripcionDestino,\n\t\t{TipoDistribuci√≥n}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DestinationSynapseDestination"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/synapsql_destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/xlsxPackingToSynapseMaterial')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "reverse_logistics/transit/data_cleaning/catalog"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "xlsx_packaging",
								"type": "DatasetReference"
							},
							"name": "SourceXLSXPacking"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "synapsql_material",
								"type": "DatasetReference"
							},
							"name": "DestinationSynapseMaterial"
						}
					],
					"transformations": [
						{
							"name": "SelectColumns"
						},
						{
							"name": "TrimColumns"
						}
					],
					"script": "source(output(\n\t\tMaterial as string,\n\t\tI2 as string,\n\t\t{Texto breve de material} as string,\n\t\tMarca as string,\n\t\tCupo as string,\n\t\tColor as string,\n\t\t{Tipo de Envase} as string,\n\t\t{Cupo Agrupado} as string,\n\t\tFactor as string,\n\t\t{Cajas x Tarima} as string,\n\t\tDestino as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SourceXLSXPacking\nTrimColumns select(mapColumn(\n\t\tMaterial,\n\t\tI2,\n\t\tTextoBreveDeMaterial = {Texto breve de material},\n\t\tMarca,\n\t\tCupo,\n\t\tColor,\n\t\tTipoDeEnvase = {Tipo de Envase},\n\t\tCupoAgrupado = {Cupo Agrupado},\n\t\tFactor,\n\t\tCajaPorTarima = {Cajas x Tarima},\n\t\tDestino\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nSourceXLSXPacking derive(Material = trim(Material),\n\t\tI2 = trim(I2),\n\t\t{Texto breve de material} = trim({Texto breve de material}),\n\t\tMarca = trim({Marca}),\n\t\tCupo = trim({Cupo}),\n\t\tColor = trim(Color),\n\t\t{Tipo de Envase} = trim({Tipo de Envase}),\n\t\t{Cupo Agrupado} = trim({Cupo Agrupado}),\n\t\tFactor = trim(Factor),\n\t\t{Cajas x Tarima} = trim({Cajas x Tarima}),\n\t\tDestino = trim(Destino)) ~> TrimColumns\nSelectColumns sink(input(\n\t\tMaterial as string,\n\t\tI2 as string,\n\t\tTextoBreveDeMaterial as string,\n\t\tMarca as string,\n\t\tCupo as string,\n\t\tColor as string,\n\t\tTipoDeEnvase as string,\n\t\tCupoAgrupado as string,\n\t\tFactor as string,\n\t\tCajaPorTarima as string,\n\t\tDestino as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tmapColumn(\n\t\tMaterial,\n\t\tI2,\n\t\tTextoBreveDeMaterial,\n\t\tMarca,\n\t\tCupo,\n\t\tColor,\n\t\tTipoDeEnvase,\n\t\tCupoAgrupado,\n\t\tFactor,\n\t\tCajaPorTarima,\n\t\tDestino\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DestinationSynapseMaterial"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/synapsql_material')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/xlsxTranStatusToSynapseTranStatus')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "reverse_logistics/transit/data_cleaning/inputs"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "xlsx_transitstatus",
								"type": "DatasetReference"
							},
							"name": "SourceXLSXTranStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "synapsql_transtatus",
								"type": "DatasetReference"
							},
							"name": "DestintarionSynapseTrans"
						}
					],
					"transformations": [
						{
							"name": "SelectColumns"
						},
						{
							"name": "TrimColumns"
						}
					],
					"script": "source(output(\n\t\t{Cl.documento compras} as string,\n\t\t{Documento compras} as string,\n\t\tProveedor as string,\n\t\t{Posici√≥n} as string,\n\t\tMaterial as string,\n\t\t{Texto breve} as string,\n\t\t{Cantidad de pedido} as string,\n\t\t{Unidad medida pedido} as string,\n\t\tCentro as string,\n\t\t{Almac√©n} as string,\n\t\tEntrega as string,\n\t\t{Stat.tot.mov.mc√≠a.} as string,\n\t\t{Fecha de entrega} as string,\n\t\tColumn_14 as string,\n\t\t{Clase de movimiento1} as string,\n\t\t{Documento material1} as string,\n\t\tCantidad1 as string,\n\t\tLote1 as string,\n\t\t{Fe.contabilizaci√≥n1} as string,\n\t\tColumn_20 as string,\n\t\t{Clase de movimiento2} as string,\n\t\t{Documento material2} as string,\n\t\tCantidad2 as string,\n\t\tLote2 as string,\n\t\t{Fe.contabilizaci√≥n2} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SourceXLSXTranStatus\nSourceXLSXTranStatus select(mapColumn(\n\t\tClDocuCompras = {Cl.documento compras},\n\t\tDocuCompras = {Documento compras},\n\t\tProveedor,\n\t\tPosicion = {Posici√≥n},\n\t\tMaterial,\n\t\tTextoBreve = {Texto breve},\n\t\tCantidadPedido = {Cantidad de pedido},\n\t\tUnidadMedidaPedido = {Unidad medida pedido},\n\t\tCentro,\n\t\tAlmacen = {Almac√©n},\n\t\tEntrega,\n\t\tStaTotMovMercancia = {Stat.tot.mov.mc√≠a.},\n\t\tFechaEntrega = {Fecha de entrega},\n\t\tClaseMovimiento1 = {Clase de movimiento1},\n\t\tDocuMaterial1 = {Documento material1},\n\t\tCantidad1,\n\t\tLote1,\n\t\tFeContabilizacion1 = {Fe.contabilizaci√≥n1},\n\t\tClaseMovimiento2 = {Clase de movimiento2},\n\t\tDocuMaterial2 = {Documento material2},\n\t\tCantidad2,\n\t\tLote2,\n\t\tFeContabilizacion2 = {Fe.contabilizaci√≥n2}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nSelectColumns derive(ClDocuCompras = trim(ClDocuCompras),\n\t\tDocuCompras = trim(DocuCompras),\n\t\tProveedor = trim(Proveedor),\n\t\tPosicion = trim(Posicion),\n\t\tMaterial = trim(Material),\n\t\tTextoBreve = trim(TextoBreve),\n\t\tCantidadPedido = trim(CantidadPedido),\n\t\tUnidadMedidaPedido = trim(UnidadMedidaPedido),\n\t\tCentro = trim(Centro),\n\t\tAlmacen = trim(Almacen),\n\t\tEntrega = trim(Entrega),\n\t\tStaTotMovMercancia = trim(StaTotMovMercancia),\n\t\tFechaEntrega = trim(FechaEntrega),\n\t\tClaseMovimiento1 = trim(ClaseMovimiento1),\n\t\tDocuMaterial1 = trim(DocuMaterial1),\n\t\tCantidad1 = trim(Cantidad1),\n\t\tLote1 = trim(Lote1),\n\t\tFeContabilizacion1 = trim(FeContabilizacion1),\n\t\tClaseMovimiento2 = trim(ClaseMovimiento2),\n\t\tDocuMaterial2 = trim(DocuMaterial2),\n\t\tCantidad2 = trim(Cantidad2),\n\t\tLote2 = trim(Lote2),\n\t\tFeContabilizacion2 = trim(FeContabilizacion2)) ~> TrimColumns\nTrimColumns sink(input(\n\t\tClDocuCompras as string,\n\t\tDocuCompras as string,\n\t\tProveedor as string,\n\t\tPosicion as string,\n\t\tMaterial as string,\n\t\tTextoBreve as string,\n\t\tCantidadPedido as string,\n\t\tUnidadMedidaPedido as string,\n\t\tCentro as string,\n\t\tAlmacen as string,\n\t\tEntrega as string,\n\t\tStaTotMovMercancia as string,\n\t\tFechaEntrega as string,\n\t\tClaseMovimiento1 as string,\n\t\tDocuMaterial1 as string,\n\t\tCantidad1 as string,\n\t\tLote1 as string,\n\t\tFeContabilizacion1 as string,\n\t\tClaseMovimiento2 as string,\n\t\tDocuMaterial2 as string,\n\t\tCantidad2 as string,\n\t\tLote2 as string,\n\t\tFeContabilizacion2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DestintarionSynapseTrans"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/synapsql_transtatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/xlsxTransToSynapseTrans')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "reverse_logistics/transit/data_cleaning/inputs"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "xlsx_trans",
								"type": "DatasetReference"
							},
							"name": "SourceXLSXTrans"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "synapsql_trans",
								"type": "DatasetReference"
							},
							"name": "DestintarionSynapseTrans"
						}
					],
					"transformations": [
						{
							"name": "SelectColumns"
						},
						{
							"name": "TrimColumns"
						}
					],
					"script": "source(output(\n\t\t{Pto.expedic./Pto.recepci√≥n} as string,\n\t\t{Denominaci√≥n1} as string,\n\t\t{Destinatario mc√≠a.} as string,\n\t\tNombre1 as string,\n\t\t{N¬∫ de transporte} as string,\n\t\t{Agente servicios} as string,\n\t\tNombre2 as string,\n\t\tEntrega as string,\n\t\t{Posici√≥n} as string,\n\t\t{Tipo de posici√≥n} as string,\n\t\t{Denominaci√≥n2} as string,\n\t\tMaterial as string,\n\t\t{Texto breve material} as string,\n\t\t{Cantidad entrega} as string,\n\t\t{Unidad medida base} as string,\n\t\t{Fe.mov.mc√≠a.real} as string,\n\t\t{Documento modelo} as string,\n\t\t{N¬∫ de pedido} as string,\n\t\t{Creado el} as string,\n\t\t{Identif.externa 1} as string,\n\t\t{Identif.externa 2} as string,\n\t\t{ID tracking transp.} as string,\n\t\t{Clase expedici√≥n} as string,\n\t\t{Denominaci√≥n3} as string,\n\t\t{Ruta p.transporte} as string,\n\t\t{Denominaci√≥n4} as string,\n\t\t{Fe.planif.registro} as string,\n\t\t{Stat.tot.mov.mc√≠a.} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SourceXLSXTrans\nSourceXLSXTrans select(mapColumn(\n\t\tPtoExpedicPtoRecepcion = {Pto.expedic./Pto.recepci√≥n},\n\t\tDenominacion1 = {Denominaci√≥n1},\n\t\tDestinatarioMercancia = {Destinatario mc√≠a.},\n\t\tNombre1,\n\t\tNTransporte = {N¬∫ de transporte},\n\t\tAgenteServicios = {Agente servicios},\n\t\tNombre2,\n\t\tEntrega,\n\t\tPosicion = {Posici√≥n},\n\t\tTipoPosicion = {Tipo de posici√≥n},\n\t\tDenominacion2 = {Denominaci√≥n2},\n\t\tMaterial,\n\t\tTextoBreveMaterial = {Texto breve material},\n\t\tCantidadEntrega = {Cantidad entrega},\n\t\tUnidadMedidaBase = {Unidad medida base},\n\t\tFeMovMercanciaReal = {Fe.mov.mc√≠a.real},\n\t\tDocumentoModelo = {Documento modelo},\n\t\tNPedido = {N¬∫ de pedido},\n\t\tCreado = {Creado el},\n\t\tIdentiExterna1 = {Identif.externa 1},\n\t\tIdentiExterna2 = {Identif.externa 2},\n\t\tIDTrackingTransp = {ID tracking transp.},\n\t\tClaseExpedicion = {Clase expedici√≥n},\n\t\tDenominacion3 = {Denominaci√≥n3},\n\t\tRutaPTransporte = {Ruta p.transporte},\n\t\tDenominacion4 = {Denominaci√≥n4},\n\t\tFePlanifRegistro = {Fe.planif.registro},\n\t\tStaTotMovMercancia = {Stat.tot.mov.mc√≠a.}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nSelectColumns derive(PtoExpedicPtoRecepcion = trim(PtoExpedicPtoRecepcion),\n\t\tDenominacion1 = trim(Denominacion1),\n\t\tDestinatarioMercancia = trim(DestinatarioMercancia),\n\t\tNombre1 = trim(Nombre1),\n\t\tNTransporte = trim(NTransporte),\n\t\tAgenteServicios = trim(AgenteServicios),\n\t\tNombre2 = trim(Nombre2),\n\t\tEntrega = trim(Entrega),\n\t\tPosicion = trim(Posicion),\n\t\tTipoPosicion = trim(TipoPosicion),\n\t\tDenominacion2 = trim(Denominacion2),\n\t\tMaterial = trim(Material),\n\t\tTextoBreveMaterial = trim(TextoBreveMaterial),\n\t\tCantidadEntrega = trim(CantidadEntrega),\n\t\tUnidadMedidaBase = trim(UnidadMedidaBase),\n\t\tFeMovMercanciaReal = trim(FeMovMercanciaReal),\n\t\tDocumentoModelo = trim(DocumentoModelo),\n\t\tNPedido = trim(NPedido),\n\t\tCreado = trim(Creado),\n\t\tIdentiExterna1 = trim(IdentiExterna1),\n\t\tIdentiExterna2 = trim(IdentiExterna2),\n\t\tIDTrackingTransp = trim(IDTrackingTransp),\n\t\tClaseExpedicion = trim(ClaseExpedicion),\n\t\tDenominacion3 = trim(Denominacion3),\n\t\tRutaPTransporte = trim(RutaPTransporte),\n\t\tDenominacion4 = trim(Denominacion4),\n\t\tFePlanifRegistro = trim(FePlanifRegistro),\n\t\tStaTotMovMercancia = trim(StaTotMovMercancia)) ~> TrimColumns\nTrimColumns sink(input(\n\t\tPtoExpedicPtoRecepcion as string,\n\t\tDenominacion1 as string,\n\t\tDestinatarioMercancia as string,\n\t\tNombre1 as string,\n\t\tNTransporte as string,\n\t\tAgenteServicios as string,\n\t\tNombre2 as string,\n\t\tEntrega as string,\n\t\tPosicion as string,\n\t\tTipoPosicion as string,\n\t\tDenominacion2 as string,\n\t\tMaterial as string,\n\t\tTextoBreveMaterial as string,\n\t\tCantidadEntrega as string,\n\t\tUnidadMedidaBase as string,\n\t\tFeMovMercanciaReal as string,\n\t\tDocumentoModelo as string,\n\t\tNPedido as string,\n\t\tCreado as string,\n\t\tIdentiExterna1 as string,\n\t\tIdentiExterna2 as string,\n\t\tIDTrackingTransp as string,\n\t\tClaseExpedicion as string,\n\t\tDenominacion3 as string,\n\t\tRutaPTransporte as string,\n\t\tDenominacion4 as string,\n\t\tFePlanifRegistro as string,\n\t\tStaTotMovMercancia as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DestintarionSynapseTrans"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/synapsql_trans')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/xlsxTransme2nToSynapseTransme2n')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "reverse_logistics/transit/data_cleaning/inputs"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "xlsx_transitme2n",
								"type": "DatasetReference"
							},
							"name": "SourceXLSXTransme2n"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "synapsql_transitme2n",
								"type": "DatasetReference"
							},
							"name": "DestintarionSynapseTransme2n"
						}
					],
					"transformations": [
						{
							"name": "SelectColumns"
						},
						{
							"name": "TrimColumns"
						}
					],
					"script": "source(output(\n\t\t{Documento compras} as string,\n\t\t{N√∫mero de necesidad} as string,\n\t\t{Nombre del proveedor} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SourceXLSXTransme2n\nSourceXLSXTransme2n select(mapColumn(\n\t\tDocumentoCompras = {Documento compras},\n\t\tNumNecesidad = {N√∫mero de necesidad},\n\t\tNombreProveedor = {Nombre del proveedor}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nSelectColumns derive(DocumentoCompras = trim(DocumentoCompras),\n\t\tNumNecesidad = trim(NumNecesidad),\n\t\tNombreProveedor = trim(NombreProveedor)) ~> TrimColumns\nTrimColumns sink(input(\n\t\tDocumentoCompras as string,\n\t\tNumNecesidad as string,\n\t\tNombreProveedor as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DestintarionSynapseTransme2n"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/synapsql_transitme2n')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Step1_createConsolidationTransit')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "reverse_logistics/transit"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "synapsql_transtatus",
								"type": "DatasetReference"
							},
							"name": "SourceSynapseTranStatus"
						},
						{
							"dataset": {
								"referenceName": "synapsql_trans",
								"type": "DatasetReference"
							},
							"name": "SourceSynapseTrans"
						},
						{
							"dataset": {
								"referenceName": "synapsql_destination",
								"type": "DatasetReference"
							},
							"name": "SourceSynapseDestination"
						},
						{
							"dataset": {
								"referenceName": "synapsql_material",
								"type": "DatasetReference"
							},
							"name": "SourceSynapseMaterial"
						},
						{
							"dataset": {
								"referenceName": "synapsql_tarima",
								"type": "DatasetReference"
							},
							"name": "SourceSynapseTarima"
						},
						{
							"dataset": {
								"referenceName": "synapsql_transitme2n",
								"type": "DatasetReference"
							},
							"name": "SourceSyanpseTransITME2N"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "synapsql_transtatusfinal",
								"type": "DatasetReference"
							},
							"name": "DestinationSyanpseFinalTranStatus"
						}
					],
					"transformations": [
						{
							"name": "ReplaceCentro"
						},
						{
							"name": "SelectTransColumns"
						},
						{
							"name": "SelectDestinationColumns"
						},
						{
							"name": "SelectMaterialColumns"
						},
						{
							"name": "SelectTarimaColumns"
						},
						{
							"name": "LeftJoinTranStatusAndDestination"
						},
						{
							"name": "SelectTransITME2NColumns"
						},
						{
							"name": "JoinNewTranStatusAndTransITME2N"
						},
						{
							"name": "JoinNewTransStatus2AndTrans"
						},
						{
							"name": "SelectNewTransStatusColums"
						}
					],
					"script": "source(output(\n\t\tClDocuCompras as string,\n\t\tDocuCompras as string,\n\t\tProveedor as string,\n\t\tPosicion as string,\n\t\tMaterial as string,\n\t\tTextoBreve as string,\n\t\tCantidadPedido as string,\n\t\tUnidadMedidaPedido as string,\n\t\tCentro as string,\n\t\tAlmacen as string,\n\t\tEntrega as string,\n\t\tStaTotMovMercancia as string,\n\t\tFechaEntrega as string,\n\t\tClaseMovimiento1 as string,\n\t\tDocuMaterial1 as string,\n\t\tCantidad1 as string,\n\t\tLote1 as string,\n\t\tFeContabilizacion1 as string,\n\t\tClaseMovimiento2 as string,\n\t\tDocuMaterial2 as string,\n\t\tCantidad2 as string,\n\t\tLote2 as string,\n\t\tFeContabilizacion2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT *\\nFROM ext.mex_log_reverlog_trans_status\\nWHERE TRIM(UPPER(StaTotMovMercancia)) LIKE \\'C\\'',\n\tformat: 'query',\n\tstaged: false) ~> SourceSynapseTranStatus\nsource(output(\n\t\tPtoExpedicPtoRecepcion as string,\n\t\tDenominacion1 as string,\n\t\tDestinatarioMercancia as string,\n\t\tNombre1 as string,\n\t\tNTransporte as string,\n\t\tAgenteServicios as string,\n\t\tNombre2 as string,\n\t\tEntrega as string,\n\t\tPosicion as string,\n\t\tTipoPosicion as string,\n\t\tDenominacion2 as string,\n\t\tMaterial as string,\n\t\tTextoBreveMaterial as string,\n\t\tCantidadEntrega as string,\n\t\tUnidadMedidaBase as string,\n\t\tFeMovMercanciaReal as string,\n\t\tDocumentoModelo as string,\n\t\tNPedido as string,\n\t\tCreado as string,\n\t\tIdentiExterna1 as string,\n\t\tIdentiExterna2 as string,\n\t\tIDTrackingTransp as string,\n\t\tClaseExpedicion as string,\n\t\tDenominacion3 as string,\n\t\tRutaPTransporte as string,\n\t\tDenominacion4 as string,\n\t\tFePlanifRegistro as string,\n\t\tStaTotMovMercancia as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT *\\nFROM ext.mex_log_reverlog_trans_trans\\nWHERE TRIM(UPPER(StaTotMovMercancia)) LIKE \\'C\\'',\n\tformat: 'query',\n\tstaged: false) ~> SourceSynapseTrans\nsource(output(\n\t\ti2 as string,\n\t\tNSociedadNueva as string,\n\t\tNSociedadAnterior as string,\n\t\tIDSAGNueva as string,\n\t\tIDSAGAnterior as string,\n\t\tDRVNva as string,\n\t\tDRV as string,\n\t\tDescripcionUEN as string,\n\t\tDescripcionUENCorto as string,\n\t\tEsquema as string,\n\t\tEstado as string,\n\t\tTipo as string,\n\t\tDistribucion as string,\n\t\tZona as string,\n\t\tAgencia as string,\n\t\tSubAgencia as string,\n\t\tTipoInv as string,\n\t\tOrigenJDA as string,\n\t\tDestinoJDA as string,\n\t\tDescripcionDestino as string,\n\t\t{TipoDistribuci√≥n} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> SourceSynapseDestination\nsource(output(\n\t\tMaterial as string,\n\t\tI2 as string,\n\t\tTextoBreveDeMaterial as string,\n\t\tMarca as string,\n\t\tCupo as string,\n\t\tColor as string,\n\t\tTipoDeEnvase as string,\n\t\tCupoAgrupado as string,\n\t\tFactor as string,\n\t\tCajaPorTarima as string,\n\t\tDestino as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> SourceSynapseMaterial\nsource(output(\n\t\tEtiquetasFila as string,\n\t\tSumaTarimas as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> SourceSynapseTarima\nsource(output(\n\t\tDocumentoCompras as string,\n\t\tNumNecesidad as string,\n\t\tNombreProveedor as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> SourceSyanpseTransITME2N\nSourceSynapseTranStatus derive(Centro = replace(Centro, 'AL', 'FL')) ~> ReplaceCentro\nSourceSynapseTrans select(mapColumn(\n\t\tPtoExpedicPtoRecepcion,\n\t\tDenominacion1,\n\t\tDestinatarioMercancia,\n\t\tNombre1,\n\t\tNTransporte,\n\t\tAgenteServicios,\n\t\tNombre2,\n\t\tEntrega,\n\t\tPosicion,\n\t\tTipoPosicion,\n\t\tDenominacion2,\n\t\tMaterial,\n\t\tTextoBreveMaterial,\n\t\tCantidadEntrega,\n\t\tUnidadMedidaBase,\n\t\tFeMovMercanciaReal,\n\t\tDocumentoModelo,\n\t\tNPedido,\n\t\tCreado,\n\t\tIdentiExterna1,\n\t\tIdentiExterna2,\n\t\tIDTrackingTransp,\n\t\tClaseExpedicion,\n\t\tDenominacion3,\n\t\tRutaPTransporte,\n\t\tDenominacion4,\n\t\tFePlanifRegistro,\n\t\tStaTotMovMercancia\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTransColumns\nSourceSynapseDestination select(mapColumn(\n\t\tAgencia_Des = IDSAGNueva,\n\t\tCentro_Des = DescripcionUENCorto,\n\t\tOP_Des = Tipo\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDestinationColumns\nSourceSynapseMaterial select(mapColumn(\n\t\tMaterial_Material = Material,\n\t\tTipoDeEnvase_Material = TipoDeEnvase,\n\t\tProduccion_Material = Destino\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectMaterialColumns\nSourceSynapseTarima select(mapColumn(\n\t\tEtiquetasFila_Tarima = EtiquetasFila,\n\t\tSumaTarimas_Materia = SumaTarimas\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTarimaColumns\nReplaceCentro, SelectDestinationColumns join(trim(upper(Centro)) == trim(upper(Centro_Des)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftJoinTranStatusAndDestination\nSourceSyanpseTransITME2N select(mapColumn(\n\t\tDocumentoCompras_TransITME2N = DocumentoCompras,\n\t\tFolio_TransITME2N = NumNecesidad,\n\t\tNombreProveedor_TransITME2N = NombreProveedor\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTransITME2NColumns\nLeftJoinTranStatusAndDestination, SourceSyanpseTransITME2N join(trim(upper(DocuCompras)) == trim(upper(DocumentoCompras)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinNewTranStatusAndTransITME2N\nJoinNewTranStatusAndTransITME2N, SelectTransColumns join(trim(upper(DocuCompras)) == trim(upper(DocumentoModelo)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinNewTransStatus2AndTrans\nJoinNewTransStatus2AndTrans select(mapColumn(\n\t\tClDocuCompras,\n\t\tDocuCompras,\n\t\tProveedor,\n\t\tPosicion = SourceSynapseTranStatus@Posicion,\n\t\tMaterial = SourceSynapseTranStatus@Material,\n\t\tTextoBreve,\n\t\tCantidadPedido,\n\t\tUnidadMedidaPedido,\n\t\tCentro,\n\t\tAlmacen,\n\t\tEntrega = SourceSynapseTranStatus@Entrega,\n\t\tStaTotMovMercancia = SourceSynapseTranStatus@StaTotMovMercancia,\n\t\tFechaEntrega,\n\t\tClaseMovimiento1,\n\t\tDocuMaterial1,\n\t\tCantidad1,\n\t\tLote1,\n\t\tFeContabilizacion1,\n\t\tClaseMovimiento2,\n\t\tDocuMaterial2,\n\t\tCantidad2,\n\t\tLote2,\n\t\tFeContabilizacion2,\n\t\tAgencia_Des,\n\t\tOP_Des,\n\t\tDocumentoCompras_TransITME2N = DocumentoCompras,\n\t\tFolio_TransITME2N = NumNecesidad,\n\t\tNombreProveedor__TransITME2N = NombreProveedor,\n\t\tStaTotMovMercancia_Trans = SelectTransColumns@StaTotMovMercancia\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectNewTransStatusColums\nSelectNewTransStatusColums sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tmapColumn(\n\t\tClDocuCompras,\n\t\tDocuCompras,\n\t\tProveedor,\n\t\tPosicion,\n\t\tMaterial,\n\t\tTextoBreve,\n\t\tCantidadPedido,\n\t\tUnidadMedidaPedido,\n\t\tCentro,\n\t\tAlmacen,\n\t\tEntrega,\n\t\tStaTotMovMercancia,\n\t\tFechaEntrega,\n\t\tClaseMovimiento1,\n\t\tDocuMaterial1,\n\t\tCantidad1,\n\t\tLote1,\n\t\tFeContabilizacion1,\n\t\tClaseMovimiento2,\n\t\tDocuMaterial2,\n\t\tCantidad2,\n\t\tLote2,\n\t\tFeContabilizacion2,\n\t\tAgencia_Des,\n\t\tOP_Des,\n\t\tDocumentoCompras_TransITME2N,\n\t\tFolio_TransITME2N,\n\t\tNombreProveedor__TransITME2N,\n\t\tStaTotMovMercancia_Trans\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DestinationSyanpseFinalTranStatus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/synapsql_transtatus')]",
				"[concat(variables('factoryId'), '/datasets/synapsql_trans')]",
				"[concat(variables('factoryId'), '/datasets/synapsql_destination')]",
				"[concat(variables('factoryId'), '/datasets/synapsql_material')]",
				"[concat(variables('factoryId'), '/datasets/synapsql_tarima')]",
				"[concat(variables('factoryId'), '/datasets/synapsql_transitme2n')]",
				"[concat(variables('factoryId'), '/datasets/synapsql_transtatusfinal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/synapsql_transtatusfinal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "aswweudevasx130_AzureSynapse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "reverse_logistics/transit/output"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "stg",
					"table": "mex_log_reverlog_trans_status_final"
				}
			},
			"dependsOn": []
		}
	]
}