{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-weu-dev-asx-130"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/xlsxTranStatusToSynapseTranStatus')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "reverse_logistics/transit/data_cleaning/inputs"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "xlsx_transitstatus",
								"type": "DatasetReference"
							},
							"name": "SourceXLSXTranStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "synapsql_transtatus",
								"type": "DatasetReference"
							},
							"name": "DestintarionSynapseTrans"
						}
					],
					"transformations": [
						{
							"name": "SelectColumns"
						},
						{
							"name": "TrimColumns"
						}
					],
					"script": "source(output(\n\t\t{Cl.documento compras} as string,\n\t\t{Documento compras} as string,\n\t\tProveedor as string,\n\t\t{Posición} as string,\n\t\tMaterial as string,\n\t\t{Texto breve} as string,\n\t\t{Cantidad de pedido} as string,\n\t\t{Unidad medida pedido} as string,\n\t\tCentro as string,\n\t\t{Almacén} as string,\n\t\tEntrega as string,\n\t\t{Stat.tot.mov.mcía.} as string,\n\t\t{Fecha de entrega} as string,\n\t\tColumn_14 as string,\n\t\t{Clase de movimiento1} as string,\n\t\t{Documento material1} as string,\n\t\tCantidad1 as string,\n\t\tLote1 as string,\n\t\t{Fe.contabilización1} as string,\n\t\tColumn_20 as string,\n\t\t{Clase de movimiento2} as string,\n\t\t{Documento material2} as string,\n\t\tCantidad2 as string,\n\t\tLote2 as string,\n\t\t{Fe.contabilización2} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SourceXLSXTranStatus\nSourceXLSXTranStatus select(mapColumn(\n\t\tClDocuCompras = {Cl.documento compras},\n\t\tDocuCompras = {Documento compras},\n\t\tProveedor,\n\t\tPosicion = {Posición},\n\t\tMaterial,\n\t\tTextoBreve = {Texto breve},\n\t\tCantidadPedido = {Cantidad de pedido},\n\t\tUnidadMedidaPedido = {Unidad medida pedido},\n\t\tCentro,\n\t\tAlmacen = {Almacén},\n\t\tEntrega,\n\t\tStaTotMovMercancia = {Stat.tot.mov.mcía.},\n\t\tFechaEntrega = {Fecha de entrega},\n\t\tClaseMovimiento1 = {Clase de movimiento1},\n\t\tDocuMaterial1 = {Documento material1},\n\t\tCantidad1,\n\t\tLote1,\n\t\tFeContabilizacion1 = {Fe.contabilización1},\n\t\tClaseMovimiento2 = {Clase de movimiento2},\n\t\tDocuMaterial2 = {Documento material2},\n\t\tCantidad2,\n\t\tLote2,\n\t\tFeContabilizacion2 = {Fe.contabilización2}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nSelectColumns derive(ClDocuCompras = trim(ClDocuCompras),\n\t\tDocuCompras = trim(DocuCompras),\n\t\tProveedor = trim(Proveedor),\n\t\tPosicion = trim(Posicion),\n\t\tMaterial = trim(Material),\n\t\tTextoBreve = trim(TextoBreve),\n\t\tCantidadPedido = trim(CantidadPedido),\n\t\tUnidadMedidaPedido = trim(UnidadMedidaPedido),\n\t\tCentro = trim(Centro),\n\t\tAlmacen = trim(Almacen),\n\t\tEntrega = trim(Entrega),\n\t\tStaTotMovMercancia = trim(StaTotMovMercancia),\n\t\tFechaEntrega = trim(FechaEntrega),\n\t\tClaseMovimiento1 = trim(ClaseMovimiento1),\n\t\tDocuMaterial1 = trim(DocuMaterial1),\n\t\tCantidad1 = trim(Cantidad1),\n\t\tLote1 = trim(Lote1),\n\t\tFeContabilizacion1 = trim(FeContabilizacion1),\n\t\tClaseMovimiento2 = trim(ClaseMovimiento2),\n\t\tDocuMaterial2 = trim(DocuMaterial2),\n\t\tCantidad2 = trim(Cantidad2),\n\t\tLote2 = trim(Lote2),\n\t\tFeContabilizacion2 = trim(FeContabilizacion2)) ~> TrimColumns\nTrimColumns sink(input(\n\t\tClDocuCompras as string,\n\t\tDocuCompras as string,\n\t\tProveedor as string,\n\t\tPosicion as string,\n\t\tMaterial as string,\n\t\tTextoBreve as string,\n\t\tCantidadPedido as string,\n\t\tUnidadMedidaPedido as string,\n\t\tCentro as string,\n\t\tAlmacen as string,\n\t\tEntrega as string,\n\t\tStaTotMovMercancia as string,\n\t\tFechaEntrega as string,\n\t\tClaseMovimiento1 as string,\n\t\tDocuMaterial1 as string,\n\t\tCantidad1 as string,\n\t\tLote1 as string,\n\t\tFeContabilizacion1 as string,\n\t\tClaseMovimiento2 as string,\n\t\tDocuMaterial2 as string,\n\t\tCantidad2 as string,\n\t\tLote2 as string,\n\t\tFeContabilizacion2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DestintarionSynapseTrans"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/xlsxTransToSynapseTrans')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "reverse_logistics/transit/data_cleaning/inputs"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "xlsx_trans",
								"type": "DatasetReference"
							},
							"name": "SourceXLSXTrans"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "synapsql_trans",
								"type": "DatasetReference"
							},
							"name": "DestintarionSynapseTrans"
						}
					],
					"transformations": [
						{
							"name": "SelectColumns"
						},
						{
							"name": "TrimColumns"
						}
					],
					"script": "source(output(\n\t\t{Pto.expedic./Pto.recepción} as string,\n\t\t{Denominación1} as string,\n\t\t{Destinatario mcía.} as string,\n\t\tNombre1 as string,\n\t\t{Nº de transporte} as string,\n\t\t{Agente servicios} as string,\n\t\tNombre2 as string,\n\t\tEntrega as string,\n\t\t{Posición} as string,\n\t\t{Tipo de posición} as string,\n\t\t{Denominación2} as string,\n\t\tMaterial as string,\n\t\t{Texto breve material} as string,\n\t\t{Cantidad entrega} as string,\n\t\t{Unidad medida base} as string,\n\t\t{Fe.mov.mcía.real} as string,\n\t\t{Documento modelo} as string,\n\t\t{Nº de pedido} as string,\n\t\t{Creado el} as string,\n\t\t{Identif.externa 1} as string,\n\t\t{Identif.externa 2} as string,\n\t\t{ID tracking transp.} as string,\n\t\t{Clase expedición} as string,\n\t\t{Denominación3} as string,\n\t\t{Ruta p.transporte} as string,\n\t\t{Denominación4} as string,\n\t\t{Fe.planif.registro} as string,\n\t\t{Stat.tot.mov.mcía.} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SourceXLSXTrans\nSourceXLSXTrans select(mapColumn(\n\t\tPtoExpedicPtoRecepcion = {Pto.expedic./Pto.recepción},\n\t\tDenominacion1 = {Denominación1},\n\t\tDestinatarioMercancia = {Destinatario mcía.},\n\t\tNombre1,\n\t\tNTransporte = {Nº de transporte},\n\t\tAgenteServicios = {Agente servicios},\n\t\tNombre2,\n\t\tEntrega,\n\t\tPosicion = {Posición},\n\t\tTipoPosicion = {Tipo de posición},\n\t\tDenominacion2 = {Denominación2},\n\t\tMaterial,\n\t\tTextoBreveMaterial = {Texto breve material},\n\t\tCantidadEntrega = {Cantidad entrega},\n\t\tUnidadMedidaBase = {Unidad medida base},\n\t\tFeMovMercanciaReal = {Fe.mov.mcía.real},\n\t\tDocumentoModelo = {Documento modelo},\n\t\tNPedido = {Nº de pedido},\n\t\tCreado = {Creado el},\n\t\tIdentiExterna1 = {Identif.externa 1},\n\t\tIdentiExterna2 = {Identif.externa 2},\n\t\tIDTrackingTransp = {ID tracking transp.},\n\t\tClaseExpedicion = {Clase expedición},\n\t\tDenominacion3 = {Denominación3},\n\t\tRutaPTransporte = {Ruta p.transporte},\n\t\tDenominacion4 = {Denominación4},\n\t\tFePlanifRegistro = {Fe.planif.registro},\n\t\tStaTotMovMercancia = {Stat.tot.mov.mcía.}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nSelectColumns derive(PtoExpedicPtoRecepcion = trim(PtoExpedicPtoRecepcion),\n\t\tDenominacion1 = trim(Denominacion1),\n\t\tDestinatarioMercancia = trim(DestinatarioMercancia),\n\t\tNombre1 = trim(Nombre1),\n\t\tNTransporte = trim(NTransporte),\n\t\tAgenteServicios = trim(AgenteServicios),\n\t\tNombre2 = trim(Nombre2),\n\t\tEntrega = trim(Entrega),\n\t\tPosicion = trim(Posicion),\n\t\tTipoPosicion = trim(TipoPosicion),\n\t\tDenominacion2 = trim(Denominacion2),\n\t\tMaterial = trim(Material),\n\t\tTextoBreveMaterial = trim(TextoBreveMaterial),\n\t\tCantidadEntrega = trim(CantidadEntrega),\n\t\tUnidadMedidaBase = trim(UnidadMedidaBase),\n\t\tFeMovMercanciaReal = trim(FeMovMercanciaReal),\n\t\tDocumentoModelo = trim(DocumentoModelo),\n\t\tNPedido = trim(NPedido),\n\t\tCreado = trim(Creado),\n\t\tIdentiExterna1 = trim(IdentiExterna1),\n\t\tIdentiExterna2 = trim(IdentiExterna2),\n\t\tIDTrackingTransp = trim(IDTrackingTransp),\n\t\tClaseExpedicion = trim(ClaseExpedicion),\n\t\tDenominacion3 = trim(Denominacion3),\n\t\tRutaPTransporte = trim(RutaPTransporte),\n\t\tDenominacion4 = trim(Denominacion4),\n\t\tFePlanifRegistro = trim(FePlanifRegistro),\n\t\tStaTotMovMercancia = trim(StaTotMovMercancia)) ~> TrimColumns\nTrimColumns sink(input(\n\t\tPtoExpedicPtoRecepcion as string,\n\t\tDenominacion1 as string,\n\t\tDestinatarioMercancia as string,\n\t\tNombre1 as string,\n\t\tNTransporte as string,\n\t\tAgenteServicios as string,\n\t\tNombre2 as string,\n\t\tEntrega as string,\n\t\tPosicion as string,\n\t\tTipoPosicion as string,\n\t\tDenominacion2 as string,\n\t\tMaterial as string,\n\t\tTextoBreveMaterial as string,\n\t\tCantidadEntrega as string,\n\t\tUnidadMedidaBase as string,\n\t\tFeMovMercanciaReal as string,\n\t\tDocumentoModelo as string,\n\t\tNPedido as string,\n\t\tCreado as string,\n\t\tIdentiExterna1 as string,\n\t\tIdentiExterna2 as string,\n\t\tIDTrackingTransp as string,\n\t\tClaseExpedicion as string,\n\t\tDenominacion3 as string,\n\t\tRutaPTransporte as string,\n\t\tDenominacion4 as string,\n\t\tFePlanifRegistro as string,\n\t\tStaTotMovMercancia as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DestintarionSynapseTrans"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/xlsxTransme2nToSynapseTransme2n')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "reverse_logistics/transit/data_cleaning/inputs"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "xlsx_transitme2n",
								"type": "DatasetReference"
							},
							"name": "SourceXLSXTransme2n"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "synapsql_transitme2n",
								"type": "DatasetReference"
							},
							"name": "DestintarionSynapseTransme2n"
						}
					],
					"transformations": [
						{
							"name": "SelectColumns"
						},
						{
							"name": "TrimColumns"
						}
					],
					"script": "source(output(\n\t\t{Documento compras} as string,\n\t\t{Número de necesidad} as string,\n\t\t{Nombre del proveedor} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SourceXLSXTransme2n\nSourceXLSXTransme2n select(mapColumn(\n\t\tDocumentoCompras = {Documento compras},\n\t\tNumNecesidad = {Número de necesidad},\n\t\tNombreProveedor = {Nombre del proveedor}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nSelectColumns derive(DocumentoCompras = trim(DocumentoCompras),\n\t\tNumNecesidad = trim(NumNecesidad),\n\t\tNombreProveedor = trim(NombreProveedor)) ~> TrimColumns\nTrimColumns sink(input(\n\t\tDocumentoCompras as string,\n\t\tNumNecesidad as string,\n\t\tNombreProveedor as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DestintarionSynapseTransme2n"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_LoadCat_RTI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CsvSales to SynapseSales",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "CsvCatalog To SynapseCatalog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "csvSalesToSynapseSales",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceCSVSales": {},
									"DestinationSynapseTableSales": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "sta130maz130rsqovup5cso-StorageLinkedService",
									"type": "LinkedServiceReference"
								},
								"folderPath": "mex/log/reverse_logistics/script"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "CsvCatalog To SynapseCatalog",
						"description": "Source: csv_catalog\nTarget: ext.mex_log_reverse_logistics_catalog",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE ext.mex_log_reverse_logistics_catalog",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Material",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Material",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Texto breve de material",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Texto_breve_de_material",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Mercado",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Mercado",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Cupo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cupo",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Envase",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Envase",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Factor",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Factor",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Cupo 1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cupo1",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Cupo 2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cupo2",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Ce",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ce",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Zona",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Zona",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Agencia",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Agencia",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Subagencia",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Subagencia",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COD_SAG",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "COD_SAG",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Ce2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ce2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Ce3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ce3",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Zona2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Zona2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Agencia2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Agencia2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Subagencia2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Subagencia2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Tipo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Tipo",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "csv_catalog",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "synpsql_catalog",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "reverse_logistics/RTI"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-14T20:52:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_LoadCatalog_Transit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "XlsxTarimaToSynapseTarima",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ETIQUETAS_FILA",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EtiquetasFila",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SUMA_TARIMAS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SumaTarimas",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "xlsx_tarima",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "synapsql_tarima",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "XlsxLocationToSynapseDestination",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "XlsxTarimaToSynapseTarima",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "xlsxLocationToSynapseDestination",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceXLSXLocation": {},
									"DestinationSynapseDestination": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "sta130maz130rsqovup5cso-StorageLinkedService",
									"type": "LinkedServiceReference"
								},
								"folderPath": "mex/log/reverse_logistics"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "XlsxPackingToSynapseMaterial",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "XlsxLocationToSynapseDestination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "xlsxPackingToSynapseMaterial",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceXLSXPacking": {},
									"DestinationSynapseMaterial": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "sta130maz130rsqovup5cso-StorageLinkedService",
									"type": "LinkedServiceReference"
								},
								"folderPath": "mex/log/reverse_logistics"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "reverse_logistics/transit"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-14T20:42:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_LoadInput_RTI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CsvSales to SynapseSales",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "csvSalesToSynapseSales",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceCSVSales": {},
									"DestinationSynapseTableSales": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "sta130maz130rsqovup5cso-StorageLinkedService",
									"type": "LinkedServiceReference"
								},
								"folderPath": "mex/log/reverse_logistics/script"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "reverse_logistics/RTI"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-14T20:52:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_LoadInput_Transit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "XLSXTransme2nToSynapseTransme2n",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "XLSXTranStatusToSynapseTranStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "xlsxTransme2nToSynapseTransme2n",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceXLSXTransme2n": {},
									"DestintarionSynapseTransme2n": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "sta130maz130rsqovup5cso-StorageLinkedService",
									"type": "LinkedServiceReference"
								},
								"folderPath": "mex/log"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "XLSXTransToSynapseTrans",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "xlsxTransToSynapseTrans",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceXLSXTrans": {},
									"DestintarionSynapseTrans": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "sta130maz130rsqovup5cso-StorageLinkedService",
									"type": "LinkedServiceReference"
								},
								"folderPath": "mex/log"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "XLSXTranStatusToSynapseTranStatus",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "XLSXTransToSynapseTrans",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "xlsxTranStatusToSynapseTranStatus",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceXLSXTranStatus": {},
									"DestintarionSynapseTrans": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "sta130maz130rsqovup5cso-StorageLinkedService",
									"type": "LinkedServiceReference"
								},
								"folderPath": "mex/log/reverse_logistics"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "reverse_logistics/transit"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-14T23:23:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/xlsxTransme2nToSynapseTransme2n')]",
				"[concat(variables('factoryId'), '/dataflows/xlsxTransToSynapseTrans')]",
				"[concat(variables('factoryId'), '/dataflows/xlsxTranStatusToSynapseTranStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_Process_RTI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Create SynapseConsolidationSalesTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Step1_createConsolidationSalesTable",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceSynapseSales": {},
									"SourceSynapseCatalog": {},
									"DestinationSynapseConsolidation1": {},
									"DestinationSynapseConsolidation2": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "sta130maz130rsqovup5cso-StorageLinkedService",
									"type": "LinkedServiceReference"
								},
								"folderPath": "mex/log/reverse_logistics"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Create SynapseSalesDB",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Create SynapseConsolidationSalesTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Step3_createSalesDB",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceSynapseConsolidation": {},
									"SourceSynapseCatalog1": {},
									"SourceSynapseCatalog2": {},
									"DestinationSynapseSalesDB": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "sta130maz130rsqovup5cso-StorageLinkedService",
									"type": "LinkedServiceReference"
								},
								"folderPath": "mex/log/reverse_logistics"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Create Dashboard Table",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Create SynapseSalesDB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Step4_createDashboard",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceSynapseSalesDB": {},
									"SelectSynapseCatalog": {},
									"DestinationSynapseDashboard": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "sta130maz130rsqovup5cso-StorageLinkedService",
									"type": "LinkedServiceReference"
								},
								"folderPath": "mex/log"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "reverse_logistics/RTI"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-14T20:52:43Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_Process_Transit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Create Final TranStatus",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Step1_createConsolidationTranStatus",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceSynapseTranStatus": {},
									"SourceSynapseTrans": {},
									"SourceSynapseDestination": {},
									"SourceSynapseTarima": {},
									"SourceSyanpseTransITME2N": {},
									"DestinationSyanpseFinalTranStatus": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "sta130maz130rsqovup5cso-StorageLinkedService",
									"type": "LinkedServiceReference"
								},
								"folderPath": "mex/log"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "reverse_logistics/transit"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-14T23:23:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/0_RTI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LoadCatalog",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1_LoadCat_RTI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "LoadInputs",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LoadCatalog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2_LoadInput_RTI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Process",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LoadInputs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3_Process_RTI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"folder": {
					"name": "reverse_logistics/RTI"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-14T20:52:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/1_LoadCat_RTI')]",
				"[concat(variables('factoryId'), '/pipelines/2_LoadInput_RTI')]",
				"[concat(variables('factoryId'), '/pipelines/3_Process_RTI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/0_Transit_Process')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LoadCatalog",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1_LoadCatalog_Transit",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "LoadInputs",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LoadCatalog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2_LoadInput_Transit",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"folder": {
					"name": "reverse_logistics/transit"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-14T23:32:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/1_LoadCatalog_Transit')]",
				"[concat(variables('factoryId'), '/pipelines/2_LoadInput_Transit')]"
			]
		}
	]
}